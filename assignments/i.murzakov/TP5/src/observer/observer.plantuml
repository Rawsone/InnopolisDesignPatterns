@startuml

title __OBSERVER's Class Diagram__\n


class observer.CourseRecord {
  - name : String
  - numOfStudents : int
  + CourseRecord()
  + getName()
  + getNumOfStudents()
  + setNumOfStudents()
  + toString()
}

class observer.LayoutConstants {
  {static} + barHeight : int
  {static} + barSpacing : int
  {static} + barWidth : int
  {static} + courseColours : Color[]
  {static} + graphHeight : int
  {static} + maxValue : int
  {static} + xOffset : int
  {static} + yOffset : int
  {static} + paintBarChartOutline()
}


class observer.pattern.BarChartObserver {
    - courseData : Vector<CourseRecord>
    + BarChartObserver()
    + paint()
    + update()
    + update()
    {static} ~ addIfFound()
}

class observer.pattern.CourseController {
    - courseData : CourseData
    - coursePanel : JPanel
    - sliders : Vector<JSlider>
    + CourseController()
    + actionPerformed()
    + addCourse()
    {static} + main()
    + stateChanged()
    + update()
    + update()
}

class observer.pattern.CourseData {
    - courseAdditionObservers : Vector<Observer>
    - courseChangeObservers : Vector<Observer>
    - courseData : Vector<CourseRecord>
    + CourseData()
    + addCourseRecord()
    + attach()
    + changeCourseRecord()
    + getUpdate()
    + notifyObservers()
}


abstract class observer.pattern.Observable {
    # observers : Vector<Observer>
    + Observable()
    + attach()
    + detach()
    {abstract} + getUpdate()
    + notifyObservers()
}

interface observer.pattern.Observer {
    {abstract} + update()
    {abstract} + update()
}


class observer.pattern.PieChartObserver {
    - courseData : Vector<CourseRecord>
    + PieChartObserver()
    + paint()
    + update()
    + update()
}

observer.pattern.BarChartObserver .up.|> observer.pattern.Observer
observer.pattern.BarChartObserver -up-|> javax.swing.JPanel
observer.pattern.CourseController .up.|> java.awt.event.ActionListener
observer.pattern.CourseController .up.|> javax.swing.event.ChangeListener
observer.pattern.CourseController .up.|> observer.pattern.Observer
observer.pattern.CourseController -up-|> javax.swing.JPanel
observer.pattern.CourseData -up-|> observer.pattern.Observable
observer.pattern.PieChartObserver .up.|> observer.pattern.Observer
observer.pattern.PieChartObserver -up-|> javax.swing.JPanel


class observer.nonpattern.CourseViewer {
    - button : JButton
    - coursePanel : JPanel
    - scrollPane : JScrollPane
    - sliderPanel : JPanel
    - sliders : Vector<JSlider>
    + CourseViewer()
    + actionPerformed()
    + addCourse()
    {static} + main()
    + paint()
    + paintPie()
    + stateChanged()
}

observer.nonpattern.CourseViewer .up.|> java.awt.event.ActionListener
observer.nonpattern.CourseViewer .up.|> javax.swing.event.ChangeListener
observer.nonpattern.CourseViewer -up-|> javax.swing.JFrame


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
