@startuml

title __SRC's Class Diagram__\n

class BankAgencyApp {
    {static} + initActions()
    {static} + main()
}
  

class bank.Account {
  - accountNumber : String
  - credits : double
  - debits : double
  - nbCredits : int
  - nbDebits : int
  - owner : String
  + Account()
  + Account()
  + balance()
  + deposit()
  + getAccountNumber()
  + getOwner()
  + print()
  + setOwner()
  + toString()
  + withdraw()
}


class bank.BankAgency {
  - accounts : ArrayList<Account>
  - loc : String
  - name : String
  + BankAgency()
  + addAccount()
  + getAccount()
  + getAccountsOf()
  + getAgencyLoc()
  + getAgencyName()
  + getNbAccounts()
  + print()
  + removeAccount()
  + toString()
  - findAccount()
}

class application.AccessBankAgency {
  {static} + getBankAgency()
  {static} + saveAgenceBancaire()
  - AccessBankAgency()
}

class application.BankAccountActionList {
  ~ actionlist : ArrayList<Action<Context>>
  ~ code : String
  ~ message : String
  ~ title : String
  + BankAccountActionList()
  + actionCode()
  + actionMessage()
  + addAction()
  + execute()
  + listOfActions()
  + listTitle()
  + removeAction()
  + removeAction()
  + size()
}

class application.BankActionContext {
  {static} - instance : BankActionContext
  - printStream : PrintStream
  - scanner : Scanner
  + close()
  + getBankAgency()
  {static} + getInstance()
  + getPrintStream()
  + getScanner()
  + setInputStream()
  - BankActionContext()
}


application.BankAccountActionList .up.|> action.ActionList
application.BankActionContext .up.|> action.ActionContext
application.BankActionContext o-- bank.BankAgency : bankAgency


class application.actions.AccountNumber {
    ~ code : String
    ~ message : String
    + AccountNumber()
    + actionCode()
    + actionMessage()
    + execute()
}

class application.actions.AddAccount {
    - code : String
    - message : String
    + AddAccount()
    + actionCode()
    + actionMessage()
    + execute()
}

class application.actions.DeleteAccount {
    - code : String
    - message : String
    + DeleteAccount()
    + actionCode()
    + actionMessage()
    + execute()
}

class application.actions.Deposit {
    - code : String
    - message : String
    + Deposit()
    + actionCode()
    + actionMessage()
    + execute()
    {static} - depositOnAccount()
}

class application.actions.ListAccounts {
    - code : String
    - message : String
    + ListAccounts()
    + actionCode()
    + actionMessage()
    + execute()
}

class application.actions.Withdraw {
    ~ code : String
    ~ message : String
    + Withdraw()
    + actionCode()
    + actionMessage()
    + execute()
    {static} - withdrawFromAccount()
}


application.actions.AccountNumber .up.|> action.Action
application.actions.AddAccount .up.|> action.Action
application.actions.DeleteAccount .up.|> action.Action
application.actions.Deposit .up.|> action.Action
application.actions.ListAccounts .up.|> action.Action
application.actions.Withdraw .up.|> action.Action


interface action.Action {
  {abstract} + actionCode()
  {abstract} + actionMessage()
  {abstract} + execute()
}


interface action.ActionContext {
  {abstract} + close()
  {abstract} + getPrintStream()
  {abstract} + getScanner()
  {abstract} + setInputStream()
}

interface action.ActionList {
  {abstract} + addAction()
  {abstract} + listOfActions()
  {abstract} + listTitle()
  {abstract} + removeAction()
  {abstract} + removeAction()
  {abstract} + size()
}

right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
