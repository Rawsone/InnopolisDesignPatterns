@startuml

title __SRC's Class Diagram__\n

      class application.AccesBankAgency {
          {static} + getBankAgency()
          {static} + saveAgenceBancaire()
          - AccesBankAgency()
      }

      class application.ApplicationContextBankAgency {
          {static} - instance : ApplicationContextBankAgency
          - printWriter : PrintWriter
          - scanner : Scanner
          + close()
          + getBankAgency()
          {static} + getInstance()
          + getPrintWriter()
          + getScanner()
          - ApplicationContextBankAgency()
      }

      class application.MyBankAgencyApplication {
          {static} + initActions()
          {static} + main()
      }


        interface application.action.Action {
            {abstract} + actionCode()
            {abstract} + actionMessage()
            {abstract} + execute()
        }


        class application.action.ActionAccountsLists {
            - code : String
            - message : String
            + ActionAccountsLists()
            + actionCode()
            + actionMessage()
            + execute()
        }




        class application.action.ActionAddAccount {
            - code : String
            - message : String
            + ActionAddAccount()
            + actionCode()
            + actionMessage()
            + execute()
        }



        class application.action.ActionDeposit {
            - code : String
            - message : String
            + ActionDeposit()
            + actionCode()
            + actionMessage()
            + execute()
        }



        class application.action.ActionGetAccountByNum {
            - code : String
            - message : String
            + ActionGetAccountByNum()
            + actionCode()
            + actionMessage()
            + execute()
        }



        class application.action.ActionGetAccountByOwner {
            - code : String
            - message : String
            + ActionGetAccountByOwner()
            + actionCode()
            + actionMessage()
            + execute()
        }



        interface application.action.ActionList {
            {abstract} + addAction()
            {abstract} + addAction()
            {abstract} + listOfActions()
            {abstract} + listTitle()
            {abstract} + removeAction()
            {abstract} + removeAction()
            {abstract} + size()
        }


        class application.action.ActionRemoveAccount {
            - code : String
            - message : String
            + ActionRemoveAccount()
            + actionCode()
            + actionMessage()
            + execute()
        }



        class application.action.ActionWithdraw {
            - code : String
            - message : String
            + ActionWithdraw()
            + actionCode()
            + actionMessage()
            + execute()
        }




        class application.action.GenericActionList {
            ~ actionList : List<Action<E>>
            ~ code : String
            ~ message : String
            ~ title : String
            + GenericActionList()
            + actionCode()
            + actionMessage()
            + addAction()
            + addAction()
            + execute()
            + listOfActions()
            + listTitle()
            + removeAction()
            + removeAction()
            + size()
        }


      class bank.Account {
          - accountNumber : String
          - credits : double
          - debits : double
          - nbCredits : int
          - nbDebits : int
          - owner : String
          + Account()
          + Account()
          + balance()
          + deposit()
          + getAccountNumber()
          + getOwner()
          + print()
          + setOwner()
          + toString()
          + withdraw()
      }

      class bank.BankAgency {
          - accounts : ArrayList<Account>
          - loc : String
          - name : String
          + BankAgency()
          + addAccount()
          + getAccount()
          + getAccountsOf()
          + getAgencyLoc()
          + getAgencyName()
          + getNbAccounts()
          + print()
          + removeAccount()
          + toString()
          - findAccount()
      }

          class application.actionlist.ActionListBankAgency {
              - actionList : List<Action<ApplicationContextBankAgency>>
              - code : String
              - message : String
              - title : String
              + ActionListBankAgency()
              + actionCode()
              + actionMessage()
              + addAction()
              + addAction()
              + execute()
              + listOfActions()
              + listTitle()
              + removeAction()
              + removeAction()
              + size()
          }



  application.actionlist.ActionListBankAgency .up.|> application.action.ActionList


  application.action.ActionAccountsLists .up.|> application.action.Action
  application.action.ActionAddAccount .up.|> application.action.Action
  application.action.ActionDeposit .up.|> application.action.Action
  application.action.ActionGetAccountByNum .up.|> application.action.Action
  application.action.ActionGetAccountByOwner .up.|> application.action.Action
  application.action.ActionRemoveAccount .up.|> application.action.Action
  application.action.ActionWithdraw .up.|> application.action.Action
  application.action.GenericActionList .up.|> application.action.ActionList

  application.ApplicationContextBankAgency o-- bank.BankAgency : bankAgency





right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
